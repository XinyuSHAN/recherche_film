{"ast":null,"code":"var _jsxFileName = \"/Users/danxinyu/Desktop/nobo_stage/recherche_film/src/js/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Movies from './Movies';\nimport Search from './Search';\nimport Button from '@material-ui/core/Button';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      query: ''\n    };\n    this.onInput = this.onInput.bind(this);\n  }\n\n  onInput(query) {\n    this.setState({\n      query\n    });\n    this.searchMovie(query);\n  }\n\n  searchMovie(query) {\n    //const url = `https://api.tvmaze.com/search/shows?q=${query}&api_key=cfe422613b250f702980a3bbf9e90716`;\n    const url = \"https://api.tvmaze.com/search/shows?q=\".concat(query);\n    fetch(url).then(response => response.json()).then(data => {\n      this.setState({\n        movies: data\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          movies = _this$state.movies,\n          query = _this$state.query;\n\n    const isSearched = query => item => !query || item.show.name.toLowerCase().includes(query.toLowerCase()); //const isSearched = query => item => !query || item.title.toLowerCase().includes(query.toLowerCase());\n\n\n    if (movies && movies.length != 0) {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Search, {\n        query: query,\n        onInput: this.onInput,\n        placeholder: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Movies, {\n        movies: movies.filter(isSearched(query)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Search, {\n        query: query,\n        onInput: this.onInput,\n        placeholder: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"There's no result yet. Please try other keywords.\"));\n    }\n\n    ;\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}), document.getElementById('root'));\nexport default App;","map":{"version":3,"sources":["/Users/danxinyu/Desktop/nobo_stage/recherche_film/src/js/App.js"],"names":["React","ReactDOM","Movies","Search","Button","App","Component","constructor","props","state","movies","query","onInput","bind","setState","searchMovie","url","fetch","then","response","json","data","render","isSearched","item","show","name","toLowerCase","includes","length","filter","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAKA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDD,EAAAA,OAAO,CAACD,KAAD,EAAQ;AACb,SAAKG,QAAL,CAAc;AACZH,MAAAA;AADY,KAAd;AAIA,SAAKI,WAAL,CAAiBJ,KAAjB;AACD;;AAEDI,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB;AACA,UAAMK,GAAG,mDAA4CL,KAA5C,CAAT;AACAM,IAAAA,KAAK,CAAED,GAAF,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,WAAKP,QAAL,CAAc;AACZJ,QAAAA,MAAM,EAAEW;AADI,OAAd;AAGD,KANH;AAOD;;AAGDC,EAAAA,MAAM,GAAG;AAAA,wBACmB,KAAKb,KADxB;AAAA,UACCC,MADD,eACCA,MADD;AAAA,UACSC,KADT,eACSA,KADT;;AAEP,UAAMY,UAAU,GAAGZ,KAAK,IAAIa,IAAI,IAAI,CAACb,KAAD,IAAUa,IAAI,CAACC,IAAL,CAAUC,IAAV,CAAeC,WAAf,GAA6BC,QAA7B,CAAsCjB,KAAK,CAACgB,WAAN,EAAtC,CAA9C,CAFO,CAGR;;;AACA,QAAGjB,MAAM,IAAEA,MAAM,CAACmB,MAAP,IAAe,CAA1B,EAA6B;AAC5B,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAElB,KAAf;AAAsB,QAAA,OAAO,EAAE,KAAKC,OAApC;AAA6C,QAAA,WAAW,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAEF,MAAM,CAACoB,MAAP,CAAcP,UAAU,CAACZ,KAAD,CAAxB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMA,KAPD,MAOK;AACF,aACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEA,KAAf;AAAsB,QAAA,OAAO,EAAE,KAAKC,OAApC;AAA6C,QAAA,WAAW,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAFJ,CADA;AAMH;;AAAA;AAEA;;AArD+B;;AA0DlCX,QAAQ,CAACqB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBS,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AAEA,eAAe3B,GAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Movies from './Movies';\nimport Search from './Search';\nimport Button from '@material-ui/core/Button'; \n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      movies: [],\n      query: ''\n    };\n    \n    this.onInput = this.onInput.bind(this);\n  }\n  \n  onInput(query) {\n    this.setState({\n      query\n    });\n    \n    this.searchMovie(query);\n  }\n  \n  searchMovie(query) {\n    //const url = `https://api.tvmaze.com/search/shows?q=${query}&api_key=cfe422613b250f702980a3bbf9e90716`;\n    const url = `https://api.tvmaze.com/search/shows?q=${query}`\n    fetch (url)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          movies: data\n        })\n      });\n  }\n\n  \n  render() {\n    const { movies, query } = this.state;\n    const isSearched = query => item => !query || item.show.name.toLowerCase().includes(query.toLowerCase());\n   //const isSearched = query => item => !query || item.title.toLowerCase().includes(query.toLowerCase());\n   if(movies&&movies.length!=0) {\n    return (\n      <div className=\"app\">\n        <Search query={query} onInput={this.onInput} placeholder=\"Search\" />\n        <Movies movies={movies.filter(isSearched(query))} />\n      </div>\n    );\n   }else{\n      return(\n      <div className=\"app\">\n          <Search query={query} onInput={this.onInput} placeholder=\"Search\" />\n          <div>There's no result yet. Please try other keywords.</div>\n        </div>\n      )\n  };\n    \n  }\n\n  \n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nexport default App;"]},"metadata":{},"sourceType":"module"}